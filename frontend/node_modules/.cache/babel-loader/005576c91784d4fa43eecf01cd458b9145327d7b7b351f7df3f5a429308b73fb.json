{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ansh9\\\\Desktop\\\\Projects\\\\WanderWise\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { FaLocationArrow, FaTimes, FaCar, FaTree, FaMoneyBillWave, FaInfoCircle, FaPlane, FaWalking, FaTrain } from \"react-icons/fa\";\nimport { GoogleMap, Marker, Autocomplete, DirectionsRenderer, InfoWindow, Polyline } from \"@react-google-maps/api\";\nimport { routesService } from \"../services/api\";\n\n// Map container style\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"calc(100vh - 160px)\"\n};\n\n// Default center position (San Francisco)\nconst defaultCenter = {\n  lat: 37.7749,\n  lng: -122.4194\n};\n\n// Map options\nconst mapOptions = {\n  zoomControl: false,\n  streetViewControl: false,\n  mapTypeControl: false,\n  fullscreenControl: false\n};\n\n// Algorithm path colors\nconst algorithmColors = {\n  \"a-star\": \"#4285F4\",\n  // Blue for A*\n  \"dijkstra\": \"#FF0000\",\n  // Red for Dijkstra\n  \"bfs\": \"#00FF00\",\n  // Green for BFS\n  \"dfs\": \"#FFA500\" // Orange for DFS\n};\n\n// Transport mode speeds in km/h\nconst transportSpeeds = {\n  \"driving\": 50,\n  \"flying\": 800,\n  \"walking\": 5,\n  \"transit\": 35\n};\nconst Map = ({\n  onRouteCalculated\n}) => {\n  _s();\n  // References\n  const sourceRef = useRef(null);\n  const destinationRef = useRef(null);\n  const mapRef = useRef(null);\n\n  // State\n  const [map, setMap] = useState(null);\n  const [startMarker, setStartMarker] = useState(null);\n  const [endMarker, setEndMarker] = useState(null);\n  const [airports, setAirports] = useState(null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [flightPath, setFlightPath] = useState(null);\n  const [distance, setDistance] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [routePreferences, setRoutePreferences] = useState({\n    avoidTolls: false,\n    avoidHighways: false,\n    mode: \"driving\"\n  });\n  const [algorithm, setAlgorithm] = useState(\"a-star\");\n  const [transportMode, setTransportMode] = useState(\"driving\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [toast, setToast] = useState({\n    show: false,\n    message: \"\",\n    type: \"\"\n  });\n  const [showAlgorithmInfo, setShowAlgorithmInfo] = useState(false);\n\n  // Callback when map loads\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n    setMap(map);\n  }, []);\n\n  // Show toast notification\n  const showToast = (message, type = \"success\") => {\n    setToast({\n      show: true,\n      message,\n      type\n    });\n    setTimeout(() => setToast({\n      show: false,\n      message: \"\",\n      type: \"\"\n    }), 3000);\n  };\n\n  // Find nearby airports\n  const findNearbyAirports = async location => {\n    try {\n      // In a real app, we'd use a Places API call\n      // For demonstration, we'll simulate finding airports\n\n      // Generate a fake airport nearby (within ~10-20km)\n      const airportOffset = () => Math.random() * 0.2 - 0.1; // Random offset of ~10km\n\n      const airportLat = location.lat + airportOffset();\n      const airportLng = location.lng + airportOffset();\n\n      // Generate an IATA code\n      const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      const randomLetter = () => alphabet[Math.floor(Math.random() * alphabet.length)];\n      const iataCode = randomLetter() + randomLetter() + randomLetter();\n      return {\n        position: {\n          lat: airportLat,\n          lng: airportLng\n        },\n        name: `${iataCode} International Airport`,\n        iata: iataCode\n      };\n    } catch (error) {\n      console.error(\"Error finding airports:\", error);\n      return null;\n    }\n  };\n\n  // Calculate route using Google Directions Service\n  const calculateRoute = async () => {\n    if (!sourceRef.current.value || !destinationRef.current.value) {\n      showToast(\"Please enter both source and destination\", \"error\");\n      return;\n    }\n    setIsLoading(true);\n    setAirports(null);\n    setFlightPath(null);\n    try {\n      // Get the places from autocomplete\n      const sourcePlace = sourceRef.current.value;\n      const destPlace = destinationRef.current.value;\n\n      // First, use Google's Geocoding to get coordinates\n      // eslint-disable-next-line no-undef\n      const geocoder = new google.maps.Geocoder();\n\n      // Get source coordinates\n      const sourceGeocode = await new Promise((resolve, reject) => {\n        geocoder.geocode({\n          address: sourcePlace\n        }, (results, status) => {\n          // eslint-disable-next-line no-undef\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0]);\n          } else {\n            reject(new Error(`Geocoding failed for ${sourcePlace}`));\n          }\n        });\n      });\n\n      // Get destination coordinates\n      const destGeocode = await new Promise((resolve, reject) => {\n        geocoder.geocode({\n          address: destPlace\n        }, (results, status) => {\n          // eslint-disable-next-line no-undef\n          if (status === google.maps.GeocoderStatus.OK) {\n            resolve(results[0]);\n          } else {\n            reject(new Error(`Geocoding failed for ${destPlace}`));\n          }\n        });\n      });\n      const sourceCoords = {\n        lat: sourceGeocode.geometry.location.lat(),\n        lng: sourceGeocode.geometry.location.lng()\n      };\n      const destCoords = {\n        lat: destGeocode.geometry.location.lat(),\n        lng: destGeocode.geometry.location.lng()\n      };\n\n      // Set markers for source and destination (except for flights)\n      setStartMarker(sourceCoords);\n      setEndMarker(destCoords);\n\n      // Center the map to show both points\n      const bounds = new google.maps.LatLngBounds();\n      bounds.extend(sourceCoords);\n      bounds.extend(destCoords);\n      map.fitBounds(bounds);\n\n      // Now, use our backend API for route calculation using selected algorithm\n      const source = {\n        name: sourcePlace,\n        lat: sourceCoords.lat,\n        lng: sourceCoords.lng\n      };\n      const destination = {\n        name: destPlace,\n        lat: destCoords.lat,\n        lng: destCoords.lng\n      };\n\n      // Call our API to calculate path using the selected algorithm\n      await routesService.calculateRoute(source, destination, algorithm);\n\n      // Calculate appropriate distance and time based on transport mode\n      let distanceValue, durationValue, directionsResult;\n      if (transportMode === \"flying\") {\n        // For flights, calculate direct distance and find airports\n        const directDistance = google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(sourceCoords), new google.maps.LatLng(destCoords));\n        distanceValue = directDistance;\n        durationValue = directDistance / 1000 / transportSpeeds.flying * 3600;\n\n        // Find nearby airports\n        const sourceAirport = await findNearbyAirports(sourceCoords);\n        const destAirport = await findNearbyAirports(destCoords);\n\n        // Set airport markers\n        if (sourceAirport && destAirport) {\n          setAirports({\n            source: sourceAirport,\n            destination: destAirport\n          });\n\n          // Create flight path\n          setFlightPath([sourceCoords, sourceAirport.position,\n          // From source to airport\n          destAirport.position,\n          // From airport to airport (flight)\n          destCoords // From airport to destination\n          ]);\n\n          // Get directions to and from airports\n          const directionsService = new google.maps.DirectionsService();\n\n          // Source to source airport\n          const toAirportDirections = await directionsService.route({\n            origin: sourceCoords,\n            destination: sourceAirport.position,\n            // eslint-disable-next-line no-undef\n            travelMode: google.maps.TravelMode.DRIVING\n          });\n\n          // Destination airport to destination\n          const fromAirportDirections = await directionsService.route({\n            origin: destAirport.position,\n            destination: destCoords,\n            // eslint-disable-next-line no-undef\n            travelMode: google.maps.TravelMode.DRIVING\n          });\n\n          // Add these distances to total\n          const toAirportDistance = toAirportDirections.routes[0].legs[0].distance.value;\n          const fromAirportDistance = fromAirportDirections.routes[0].legs[0].distance.value;\n\n          // Update total distance to include travel to/from airports\n          distanceValue += toAirportDistance + fromAirportDistance;\n\n          // Update duration to include travel to/from airports\n          const toAirportDuration = toAirportDirections.routes[0].legs[0].duration.value;\n          const fromAirportDuration = fromAirportDirections.routes[0].legs[0].duration.value;\n          durationValue += toAirportDuration + fromAirportDuration;\n\n          // Plus 2 hours for airport procedures\n          durationValue += 2 * 60 * 60; // 2 hours in seconds\n        }\n\n        // Clear any existing directions\n        setDirectionsResponse(null);\n      } else {\n        // For other modes, get directions from Google\n        const directionsService = new google.maps.DirectionsService();\n        directionsResult = await directionsService.route({\n          origin: sourceCoords,\n          destination: destCoords,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode[transportMode.toUpperCase()],\n          avoidTolls: routePreferences.avoidTolls,\n          avoidHighways: routePreferences.avoidHighways\n        });\n        distanceValue = directionsResult.routes[0].legs[0].distance.value;\n        durationValue = directionsResult.routes[0].legs[0].duration.value;\n\n        // Set directions with custom styling for algorithms\n        const rendererOptions = {\n          directions: directionsResult,\n          options: {\n            polylineOptions: {\n              strokeColor: algorithmColors[algorithm],\n              strokeWeight: 6,\n              strokeOpacity: 0.8\n            },\n            suppressMarkers: true // Suppress default markers since we're using custom ones\n          }\n        };\n        setDirectionsResponse(rendererOptions);\n        setFlightPath(null);\n        setAirports(null);\n      }\n\n      // Format distance\n      let distanceText;\n      if (distanceValue < 1000) {\n        distanceText = `${Math.round(distanceValue)} m`;\n      } else {\n        distanceText = `${(distanceValue / 1000).toFixed(2)} km`;\n      }\n\n      // Format duration\n      let durationText;\n      if (durationValue < 60) {\n        durationText = `${Math.round(durationValue)} sec`;\n      } else if (durationValue < 3600) {\n        durationText = `${Math.floor(durationValue / 60)} min`;\n      } else {\n        const hours = Math.floor(durationValue / 3600);\n        const minutes = Math.floor(durationValue % 3600 / 60);\n        durationText = `${hours} hr ${minutes} min`;\n      }\n      setDistance(distanceText);\n      setDuration(durationText);\n\n      // Notify parent component about the calculated route\n      if (onRouteCalculated) {\n        onRouteCalculated(source, destination, {\n          source,\n          destination,\n          distance: distanceValue,\n          duration: durationValue\n        });\n      }\n\n      // Show success message\n      let algorithmName;\n      switch (algorithm) {\n        case \"dijkstra\":\n          algorithmName = \"Dijkstra's\";\n          break;\n        case \"bfs\":\n          algorithmName = \"BFS\";\n          break;\n        case \"dfs\":\n          algorithmName = \"DFS\";\n          break;\n        default:\n          algorithmName = \"A*\";\n      }\n      showToast(`Route calculated using ${algorithmName} algorithm`);\n    } catch (error) {\n      console.error(\"Error calculating route:\", error);\n      showToast(error.message || \"Error calculating route\", \"error\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear route\n  const clearRoute = () => {\n    setStartMarker(null);\n    setEndMarker(null);\n    setDirectionsResponse(null);\n    setFlightPath(null);\n    setAirports(null);\n    setDistance(\"\");\n    setDuration(\"\");\n    sourceRef.current.value = \"\";\n    destinationRef.current.value = \"\";\n  };\n\n  // Center map on current position\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        map.panTo(pos);\n        map.setZoom(14);\n      }, () => {\n        showToast(\"Error: Geolocation permission denied\", \"error\");\n      });\n    } else {\n      showToast(\"Error: Your browser doesn't support geolocation\", \"error\");\n    }\n  };\n\n  // Handle route preference changes\n  const handlePreferenceChange = e => {\n    const {\n      name,\n      value,\n      checked,\n      type\n    } = e.target;\n    setRoutePreferences(prev => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  };\n\n  // Handle algorithm change\n  const handleAlgorithmChange = e => {\n    setAlgorithm(e.target.value);\n\n    // Update route color if directions exist\n    if (directionsResponse) {\n      setDirectionsResponse({\n        ...directionsResponse,\n        options: {\n          ...directionsResponse.options,\n          polylineOptions: {\n            ...directionsResponse.options.polylineOptions,\n            strokeColor: algorithmColors[e.target.value]\n          }\n        }\n      });\n    }\n  };\n\n  // Handle transport mode change\n  const handleTransportModeChange = mode => {\n    setTransportMode(mode);\n    if (mode !== \"flying\") {\n      setAirports(null);\n      setFlightPath(null);\n    }\n  };\n\n  // Toggle algorithm info\n  const toggleAlgorithmInfo = () => {\n    setShowAlgorithmInfo(!showAlgorithmInfo);\n  };\n\n  // Get icon for transport mode button\n  const getTransportIcon = mode => {\n    switch (mode) {\n      case \"flying\":\n        return /*#__PURE__*/_jsxDEV(FaPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 16\n        }, this);\n      case \"walking\":\n        return /*#__PURE__*/_jsxDEV(FaWalking, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 16\n        }, this);\n      case \"transit\":\n        return /*#__PURE__*/_jsxDEV(FaTrain, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(FaCar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-full\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: defaultCenter,\n        zoom: 10,\n        options: mapOptions,\n        onLoad: onMapLoad,\n        children: [directionsResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directionsResponse.directions,\n          options: directionsResponse.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), flightPath && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Polyline, {\n            path: [flightPath[0], flightPath[1]],\n            options: {\n              strokeColor: \"#808080\",\n              // Gray for ground transport\n              strokeOpacity: 0.8,\n              strokeWeight: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            path: [flightPath[1], flightPath[2]],\n            options: {\n              strokeColor: algorithmColors[algorithm],\n              strokeOpacity: 0.8,\n              strokeWeight: 5,\n              geodesic: true,\n              // Creates an arc for flight path\n              icons: [{\n                icon: {\n                  path: 'M 0,-1 0,1',\n                  strokeOpacity: 1,\n                  scale: 4\n                },\n                offset: '0',\n                repeat: '20px'\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            path: [flightPath[2], flightPath[3]],\n            options: {\n              strokeColor: \"#808080\",\n              // Gray for ground transport\n              strokeOpacity: 0.8,\n              strokeWeight: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), startMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: startMarker,\n          label: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), endMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: endMarker,\n          label: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), airports && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: airports.source.position,\n            icon: {\n              url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n              scaledSize: new google.maps.Size(32, 32)\n            },\n            onClick: () => setSelectedMarker({\n              position: airports.source.position,\n              title: airports.source.name,\n              description: `Airport code: ${airports.source.iata}`\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: airports.destination.position,\n            icon: {\n              url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\n              scaledSize: new google.maps.Size(32, 32)\n            },\n            onClick: () => setSelectedMarker({\n              position: airports.destination.position,\n              title: airports.destination.name,\n              description: `Airport code: ${airports.destination.iata}`\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: selectedMarker.position,\n          onCloseClick: () => setSelectedMarker(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-gray-900\",\n              children: selectedMarker.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: selectedMarker.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 left-4 bg-white p-4 rounded-lg shadow-md w-72\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: sourceRef,\n                type: \"text\",\n                placeholder: \"Origin\",\n                className: \"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: destinationRef,\n                type: \"text\",\n                placeholder: \"Destination\",\n                className: \"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-2\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"avoidTolls\",\n                  checked: routePreferences.avoidTolls,\n                  onChange: handlePreferenceChange,\n                  className: \"rounded text-teal-500 focus:ring-teal-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaMoneyBillWave, {\n                    className: \"text-teal-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 21\n                  }, this), \" No Tolls\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"avoidHighways\",\n                  checked: routePreferences.avoidHighways,\n                  onChange: handlePreferenceChange,\n                  className: \"rounded text-teal-500 focus:ring-teal-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FaTree, {\n                    className: \"text-teal-500 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 21\n                  }, this), \" Scenic\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"driving\"),\n              className: `p-2 rounded-full ${transportMode === \"driving\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Car\",\n              children: /*#__PURE__*/_jsxDEV(FaCar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"flying\"),\n              className: `p-2 rounded-full ${transportMode === \"flying\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Flight\",\n              children: /*#__PURE__*/_jsxDEV(FaPlane, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"walking\"),\n              className: `p-2 rounded-full ${transportMode === \"walking\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Walking\",\n              children: /*#__PURE__*/_jsxDEV(FaWalking, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTransportModeChange(\"transit\"),\n              className: `p-2 rounded-full ${transportMode === \"transit\" ? \"bg-teal-500 text-white\" : \"bg-gray-200 text-gray-600\"}`,\n              title: \"Train/Transit\",\n              children: /*#__PURE__*/_jsxDEV(FaTrain, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: algorithm,\n              onChange: handleAlgorithmChange,\n              className: \"w-full p-2 text-sm border border-gray-300 rounded focus:outline-none focus:border-teal-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"dijkstra\",\n                children: \"Dijkstra's Algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"a-star\",\n                children: \"A* Algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bfs\",\n                children: \"BFS Algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"dfs\",\n                children: \"DFS Algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleAlgorithmInfo,\n              className: \"ml-2 text-gray-500 hover:text-teal-500\",\n              title: \"Algorithm Information\",\n              children: /*#__PURE__*/_jsxDEV(FaInfoCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this), showAlgorithmInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs p-2 bg-blue-50 rounded text-blue-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Dijkstra\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 19\n              }, this), \": Explores all directions equally.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"A*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 19\n              }, this), \": Uses heuristics to prioritize promising paths.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"BFS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this), \": Explores nearest neighbors first.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"DFS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 19\n              }, this), \": Explores as far as possible before backtracking.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: calculateRoute,\n              className: \"flex-1 p-2 bg-teal-500 text-white font-medium rounded hover:bg-teal-600 transition-colors flex items-center justify-center\",\n              disabled: isLoading,\n              children: [isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inline-block animate-spin mr-2\",\n                children: \"\\u27F3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this) : getTransportIcon(transportMode), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1\",\n                children: \"Calculate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearRoute,\n              className: \"p-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: getCurrentLocation,\n              className: \"p-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(FaLocationArrow, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this), distance && duration && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm p-2 bg-gray-50 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Distance:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1\",\n                children: distance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1\",\n                children: duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), transportMode === \"flying\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mt-1 text-xs text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Includes airport transfer and 2hr check-in time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), toast.show && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed bottom-4 right-4 p-3 rounded-lg shadow-lg \n              ${toast.type === \"error\" ? \"bg-red-500 text-white\" : \"bg-green-500 text-white\"}`,\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"swb0ri6Aq+Y1h220+3XbY78JR/s=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","useCallback","FaLocationArrow","FaTimes","FaCar","FaTree","FaMoneyBillWave","FaInfoCircle","FaPlane","FaWalking","FaTrain","GoogleMap","Marker","Autocomplete","DirectionsRenderer","InfoWindow","Polyline","routesService","jsxDEV","_jsxDEV","Fragment","_Fragment","mapContainerStyle","width","height","defaultCenter","lat","lng","mapOptions","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","algorithmColors","transportSpeeds","Map","onRouteCalculated","_s","sourceRef","destinationRef","mapRef","map","setMap","startMarker","setStartMarker","endMarker","setEndMarker","airports","setAirports","directionsResponse","setDirectionsResponse","flightPath","setFlightPath","distance","setDistance","duration","setDuration","routePreferences","setRoutePreferences","avoidTolls","avoidHighways","mode","algorithm","setAlgorithm","transportMode","setTransportMode","isLoading","setIsLoading","selectedMarker","setSelectedMarker","toast","setToast","show","message","type","showAlgorithmInfo","setShowAlgorithmInfo","onMapLoad","current","showToast","setTimeout","findNearbyAirports","location","airportOffset","Math","random","airportLat","airportLng","alphabet","randomLetter","floor","length","iataCode","position","name","iata","error","console","calculateRoute","value","sourcePlace","destPlace","geocoder","google","maps","Geocoder","sourceGeocode","Promise","resolve","reject","geocode","address","results","status","GeocoderStatus","OK","Error","destGeocode","sourceCoords","geometry","destCoords","bounds","LatLngBounds","extend","fitBounds","source","destination","distanceValue","durationValue","directionsResult","directDistance","spherical","computeDistanceBetween","LatLng","flying","sourceAirport","destAirport","directionsService","DirectionsService","toAirportDirections","route","origin","travelMode","TravelMode","DRIVING","fromAirportDirections","toAirportDistance","routes","legs","fromAirportDistance","toAirportDuration","fromAirportDuration","toUpperCase","rendererOptions","directions","options","polylineOptions","strokeColor","strokeWeight","strokeOpacity","suppressMarkers","distanceText","round","toFixed","durationText","hours","minutes","algorithmName","clearRoute","getCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","panTo","setZoom","handlePreferenceChange","e","checked","target","prev","handleAlgorithmChange","handleTransportModeChange","toggleAlgorithmInfo","getTransportIcon","fileName","_jsxFileName","lineNumber","columnNumber","className","children","center","zoom","onLoad","path","geodesic","icons","icon","scale","offset","repeat","label","url","scaledSize","Size","onClick","title","description","onCloseClick","ref","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ansh9/Desktop/Projects/WanderWise/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\r\nimport {\r\n  FaLocationArrow,\r\n  FaTimes,\r\n  FaCar,\r\n  FaTree,\r\n  FaMoneyBillWave,\r\n  FaInfoCircle,\r\n  FaPlane,\r\n  FaWalking,\r\n  FaTrain,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  Autocomplete,\r\n  DirectionsRenderer,\r\n  InfoWindow,\r\n  Polyline,\r\n} from \"@react-google-maps/api\";\r\n\r\nimport { routesService } from \"../services/api\";\r\n\r\n// Map container style\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"calc(100vh - 160px)\",\r\n};\r\n\r\n// Default center position (San Francisco)\r\nconst defaultCenter = { lat: 37.7749, lng: -122.4194 };\r\n\r\n// Map options\r\nconst mapOptions = {\r\n  zoomControl: false,\r\n  streetViewControl: false,\r\n  mapTypeControl: false,\r\n  fullscreenControl: false,\r\n};\r\n\r\n// Algorithm path colors\r\nconst algorithmColors = {\r\n  \"a-star\": \"#4285F4\", // Blue for A*\r\n  \"dijkstra\": \"#FF0000\", // Red for Dijkstra\r\n  \"bfs\": \"#00FF00\", // Green for BFS\r\n  \"dfs\": \"#FFA500\", // Orange for DFS\r\n};\r\n\r\n// Transport mode speeds in km/h\r\nconst transportSpeeds = {\r\n  \"driving\": 50,\r\n  \"flying\": 800,\r\n  \"walking\": 5,\r\n  \"transit\": 35,\r\n};\r\n\r\nconst Map = ({ onRouteCalculated }) => {\r\n  // References\r\n  const sourceRef = useRef(null);\r\n  const destinationRef = useRef(null);\r\n  const mapRef = useRef(null);\r\n\r\n  // State\r\n  const [map, setMap] = useState(null);\r\n  const [startMarker, setStartMarker] = useState(null);\r\n  const [endMarker, setEndMarker] = useState(null);\r\n  const [airports, setAirports] = useState(null);\r\n  const [directionsResponse, setDirectionsResponse] = useState(null);\r\n  const [flightPath, setFlightPath] = useState(null);\r\n  const [distance, setDistance] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n  const [routePreferences, setRoutePreferences] = useState({\r\n    avoidTolls: false,\r\n    avoidHighways: false,\r\n    mode: \"driving\",\r\n  });\r\n  const [algorithm, setAlgorithm] = useState(\"a-star\");\r\n  const [transportMode, setTransportMode] = useState(\"driving\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n  const [toast, setToast] = useState({ show: false, message: \"\", type: \"\" });\r\n  const [showAlgorithmInfo, setShowAlgorithmInfo] = useState(false);\r\n\r\n  // Callback when map loads\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n    setMap(map);\r\n  }, []);\r\n\r\n  // Show toast notification\r\n  const showToast = (message, type = \"success\") => {\r\n    setToast({ show: true, message, type });\r\n    setTimeout(() => setToast({ show: false, message: \"\", type: \"\" }), 3000);\r\n  };\r\n\r\n  // Find nearby airports\r\n  const findNearbyAirports = async (location) => {\r\n    try {\r\n      // In a real app, we'd use a Places API call\r\n      // For demonstration, we'll simulate finding airports\r\n      \r\n      // Generate a fake airport nearby (within ~10-20km)\r\n      const airportOffset = () => (Math.random() * 0.2) - 0.1; // Random offset of ~10km\r\n      \r\n      const airportLat = location.lat + airportOffset();\r\n      const airportLng = location.lng + airportOffset();\r\n      \r\n      // Generate an IATA code\r\n      const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n      const randomLetter = () => alphabet[Math.floor(Math.random() * alphabet.length)];\r\n      const iataCode = randomLetter() + randomLetter() + randomLetter();\r\n      \r\n      return {\r\n        position: { lat: airportLat, lng: airportLng },\r\n        name: `${iataCode} International Airport`,\r\n        iata: iataCode\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error finding airports:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Calculate route using Google Directions Service\r\n  const calculateRoute = async () => {\r\n    if (!sourceRef.current.value || !destinationRef.current.value) {\r\n      showToast(\"Please enter both source and destination\", \"error\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setAirports(null);\r\n    setFlightPath(null);\r\n\r\n    try {\r\n      // Get the places from autocomplete\r\n      const sourcePlace = sourceRef.current.value;\r\n      const destPlace = destinationRef.current.value;\r\n\r\n      // First, use Google's Geocoding to get coordinates\r\n      // eslint-disable-next-line no-undef\r\n      const geocoder = new google.maps.Geocoder();\r\n      \r\n      // Get source coordinates\r\n      const sourceGeocode = await new Promise((resolve, reject) => {\r\n        geocoder.geocode({ address: sourcePlace }, (results, status) => {\r\n          // eslint-disable-next-line no-undef\r\n          if (status === google.maps.GeocoderStatus.OK) {\r\n            resolve(results[0]);\r\n          } else {\r\n            reject(new Error(`Geocoding failed for ${sourcePlace}`));\r\n          }\r\n        });\r\n      });\r\n      \r\n      // Get destination coordinates\r\n      const destGeocode = await new Promise((resolve, reject) => {\r\n        geocoder.geocode({ address: destPlace }, (results, status) => {\r\n          // eslint-disable-next-line no-undef\r\n          if (status === google.maps.GeocoderStatus.OK) {\r\n            resolve(results[0]);\r\n          } else {\r\n            reject(new Error(`Geocoding failed for ${destPlace}`));\r\n          }\r\n        });\r\n      });\r\n\r\n      const sourceCoords = {\r\n        lat: sourceGeocode.geometry.location.lat(),\r\n        lng: sourceGeocode.geometry.location.lng(),\r\n      };\r\n\r\n      const destCoords = {\r\n        lat: destGeocode.geometry.location.lat(),\r\n        lng: destGeocode.geometry.location.lng(),\r\n      };\r\n\r\n      // Set markers for source and destination (except for flights)\r\n      setStartMarker(sourceCoords);\r\n      setEndMarker(destCoords);\r\n\r\n      // Center the map to show both points\r\n      const bounds = new google.maps.LatLngBounds();\r\n      bounds.extend(sourceCoords);\r\n      bounds.extend(destCoords);\r\n      map.fitBounds(bounds);\r\n\r\n      // Now, use our backend API for route calculation using selected algorithm\r\n      const source = {\r\n        name: sourcePlace,\r\n        lat: sourceCoords.lat,\r\n        lng: sourceCoords.lng,\r\n      };\r\n\r\n      const destination = {\r\n        name: destPlace,\r\n        lat: destCoords.lat,\r\n        lng: destCoords.lng,\r\n      };\r\n\r\n      // Call our API to calculate path using the selected algorithm\r\n      await routesService.calculateRoute(\r\n        source,\r\n        destination,\r\n        algorithm\r\n      );\r\n\r\n      // Calculate appropriate distance and time based on transport mode\r\n      let distanceValue, durationValue, directionsResult;\r\n      \r\n      if (transportMode === \"flying\") {\r\n        // For flights, calculate direct distance and find airports\r\n        const directDistance = google.maps.geometry.spherical.computeDistanceBetween(\r\n          new google.maps.LatLng(sourceCoords),\r\n          new google.maps.LatLng(destCoords)\r\n        );\r\n        distanceValue = directDistance;\r\n        durationValue = (directDistance / 1000) / transportSpeeds.flying * 3600;\r\n        \r\n        // Find nearby airports\r\n        const sourceAirport = await findNearbyAirports(sourceCoords);\r\n        const destAirport = await findNearbyAirports(destCoords);\r\n        \r\n        // Set airport markers\r\n        if (sourceAirport && destAirport) {\r\n          setAirports({\r\n            source: sourceAirport,\r\n            destination: destAirport\r\n          });\r\n          \r\n          // Create flight path\r\n          setFlightPath([\r\n            sourceCoords,\r\n            sourceAirport.position, // From source to airport\r\n            destAirport.position,   // From airport to airport (flight)\r\n            destCoords              // From airport to destination\r\n          ]);\r\n          \r\n          // Get directions to and from airports\r\n          const directionsService = new google.maps.DirectionsService();\r\n          \r\n          // Source to source airport\r\n          const toAirportDirections = await directionsService.route({\r\n            origin: sourceCoords,\r\n            destination: sourceAirport.position,\r\n            // eslint-disable-next-line no-undef\r\n            travelMode: google.maps.TravelMode.DRIVING,\r\n          });\r\n          \r\n          // Destination airport to destination\r\n          const fromAirportDirections = await directionsService.route({\r\n            origin: destAirport.position,\r\n            destination: destCoords,\r\n            // eslint-disable-next-line no-undef\r\n            travelMode: google.maps.TravelMode.DRIVING,\r\n          });\r\n          \r\n          // Add these distances to total\r\n          const toAirportDistance = toAirportDirections.routes[0].legs[0].distance.value;\r\n          const fromAirportDistance = fromAirportDirections.routes[0].legs[0].distance.value;\r\n          \r\n          // Update total distance to include travel to/from airports\r\n          distanceValue += toAirportDistance + fromAirportDistance;\r\n          \r\n          // Update duration to include travel to/from airports\r\n          const toAirportDuration = toAirportDirections.routes[0].legs[0].duration.value;\r\n          const fromAirportDuration = fromAirportDirections.routes[0].legs[0].duration.value;\r\n          durationValue += toAirportDuration + fromAirportDuration;\r\n          \r\n          // Plus 2 hours for airport procedures\r\n          durationValue += 2 * 60 * 60; // 2 hours in seconds\r\n        }\r\n        \r\n        // Clear any existing directions\r\n        setDirectionsResponse(null);\r\n      } else {\r\n        // For other modes, get directions from Google\r\n        const directionsService = new google.maps.DirectionsService();\r\n        directionsResult = await directionsService.route({\r\n          origin: sourceCoords,\r\n          destination: destCoords,\r\n          // eslint-disable-next-line no-undef\r\n          travelMode: google.maps.TravelMode[transportMode.toUpperCase()],\r\n          avoidTolls: routePreferences.avoidTolls,\r\n          avoidHighways: routePreferences.avoidHighways,\r\n        });\r\n        \r\n        distanceValue = directionsResult.routes[0].legs[0].distance.value;\r\n        durationValue = directionsResult.routes[0].legs[0].duration.value;\r\n        \r\n        // Set directions with custom styling for algorithms\r\n        const rendererOptions = {\r\n          directions: directionsResult,\r\n          options: {\r\n            polylineOptions: {\r\n              strokeColor: algorithmColors[algorithm],\r\n              strokeWeight: 6,\r\n              strokeOpacity: 0.8\r\n            },\r\n            suppressMarkers: true // Suppress default markers since we're using custom ones\r\n          }\r\n        };\r\n        \r\n        setDirectionsResponse(rendererOptions);\r\n        setFlightPath(null);\r\n        setAirports(null);\r\n      }\r\n\r\n      // Format distance\r\n      let distanceText;\r\n      if (distanceValue < 1000) {\r\n        distanceText = `${Math.round(distanceValue)} m`;\r\n      } else {\r\n        distanceText = `${(distanceValue / 1000).toFixed(2)} km`;\r\n      }\r\n\r\n      // Format duration\r\n      let durationText;\r\n      if (durationValue < 60) {\r\n        durationText = `${Math.round(durationValue)} sec`;\r\n      } else if (durationValue < 3600) {\r\n        durationText = `${Math.floor(durationValue / 60)} min`;\r\n      } else {\r\n        const hours = Math.floor(durationValue / 3600);\r\n        const minutes = Math.floor((durationValue % 3600) / 60);\r\n        durationText = `${hours} hr ${minutes} min`;\r\n      }\r\n\r\n      setDistance(distanceText);\r\n      setDuration(durationText);\r\n\r\n      // Notify parent component about the calculated route\r\n      if (onRouteCalculated) {\r\n        onRouteCalculated(source, destination, {\r\n          source,\r\n          destination,\r\n          distance: distanceValue,\r\n          duration: durationValue,\r\n        });\r\n      }\r\n\r\n      // Show success message\r\n      let algorithmName;\r\n      switch (algorithm) {\r\n        case \"dijkstra\":\r\n          algorithmName = \"Dijkstra's\";\r\n          break;\r\n        case \"bfs\":\r\n          algorithmName = \"BFS\";\r\n          break;\r\n        case \"dfs\":\r\n          algorithmName = \"DFS\";\r\n          break;\r\n        default:\r\n          algorithmName = \"A*\";\r\n      }\r\n\r\n      showToast(`Route calculated using ${algorithmName} algorithm`);\r\n    } catch (error) {\r\n      console.error(\"Error calculating route:\", error);\r\n      showToast(error.message || \"Error calculating route\", \"error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Clear route\r\n  const clearRoute = () => {\r\n    setStartMarker(null);\r\n    setEndMarker(null);\r\n    setDirectionsResponse(null);\r\n    setFlightPath(null);\r\n    setAirports(null);\r\n    setDistance(\"\");\r\n    setDuration(\"\");\r\n    sourceRef.current.value = \"\";\r\n    destinationRef.current.value = \"\";\r\n  };\r\n\r\n  // Center map on current position\r\n  const getCurrentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const pos = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          map.panTo(pos);\r\n          map.setZoom(14);\r\n        },\r\n        () => {\r\n          showToast(\"Error: Geolocation permission denied\", \"error\");\r\n        }\r\n      );\r\n    } else {\r\n      showToast(\"Error: Your browser doesn't support geolocation\", \"error\");\r\n    }\r\n  };\r\n\r\n  // Handle route preference changes\r\n  const handlePreferenceChange = (e) => {\r\n    const { name, value, checked, type } = e.target;\r\n\r\n    setRoutePreferences((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  // Handle algorithm change\r\n  const handleAlgorithmChange = (e) => {\r\n    setAlgorithm(e.target.value);\r\n    \r\n    // Update route color if directions exist\r\n    if (directionsResponse) {\r\n      setDirectionsResponse({\r\n        ...directionsResponse,\r\n        options: {\r\n          ...directionsResponse.options,\r\n          polylineOptions: {\r\n            ...directionsResponse.options.polylineOptions,\r\n            strokeColor: algorithmColors[e.target.value]\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Handle transport mode change\r\n  const handleTransportModeChange = (mode) => {\r\n    setTransportMode(mode);\r\n    if (mode !== \"flying\") {\r\n      setAirports(null);\r\n      setFlightPath(null);\r\n    }\r\n  };\r\n\r\n  // Toggle algorithm info\r\n  const toggleAlgorithmInfo = () => {\r\n    setShowAlgorithmInfo(!showAlgorithmInfo);\r\n  };\r\n\r\n  // Get icon for transport mode button\r\n  const getTransportIcon = (mode) => {\r\n    switch (mode) {\r\n      case \"flying\":\r\n        return <FaPlane />;\r\n      case \"walking\":\r\n        return <FaWalking />;\r\n      case \"transit\":\r\n        return <FaTrain />;\r\n      default:\r\n        return <FaCar />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-full\">\r\n      {/* Main map container */}\r\n      <div className=\"relative w-full h-full\">\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          center={defaultCenter}\r\n          zoom={10}\r\n          options={mapOptions}\r\n          onLoad={onMapLoad}\r\n        >\r\n          {directionsResponse && (\r\n            <DirectionsRenderer \r\n              directions={directionsResponse.directions}\r\n              options={directionsResponse.options}\r\n            />\r\n          )}\r\n\r\n          {/* Flight path visualization with arcs */}\r\n          {flightPath && (\r\n            <>\r\n              {/* Source to departure airport path */}\r\n              <Polyline\r\n                path={[flightPath[0], flightPath[1]]}\r\n                options={{\r\n                  strokeColor: \"#808080\", // Gray for ground transport\r\n                  strokeOpacity: 0.8,\r\n                  strokeWeight: 3,\r\n                }}\r\n              />\r\n              \r\n              {/* Air route with arc */}\r\n              <Polyline\r\n                path={[flightPath[1], flightPath[2]]}\r\n                options={{\r\n                  strokeColor: algorithmColors[algorithm],\r\n                  strokeOpacity: 0.8,\r\n                  strokeWeight: 5,\r\n                  geodesic: true, // Creates an arc for flight path\r\n                  icons: [{\r\n                    icon: {\r\n                      path: 'M 0,-1 0,1',\r\n                      strokeOpacity: 1,\r\n                      scale: 4\r\n                    },\r\n                    offset: '0',\r\n                    repeat: '20px'\r\n                  }]\r\n                }}\r\n              />\r\n              \r\n              {/* Arrival airport to destination path */}\r\n              <Polyline\r\n                path={[flightPath[2], flightPath[3]]}\r\n                options={{\r\n                  strokeColor: \"#808080\", // Gray for ground transport\r\n                  strokeOpacity: 0.8,\r\n                  strokeWeight: 3,\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {startMarker && (\r\n            <Marker\r\n              position={startMarker}\r\n              label=\"A\"\r\n            />\r\n          )}\r\n\r\n          {endMarker && (\r\n            <Marker\r\n              position={endMarker}\r\n              label=\"B\"\r\n            />\r\n          )}\r\n\r\n          {/* Airport markers */}\r\n          {airports && (\r\n            <>\r\n              <Marker\r\n                position={airports.source.position}\r\n                icon={{\r\n                  url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\r\n                  scaledSize: new google.maps.Size(32, 32)\r\n                }}\r\n                onClick={() => setSelectedMarker({\r\n                  position: airports.source.position,\r\n                  title: airports.source.name,\r\n                  description: `Airport code: ${airports.source.iata}`\r\n                })}\r\n              />\r\n              <Marker\r\n                position={airports.destination.position}\r\n                icon={{\r\n                  url: 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png',\r\n                  scaledSize: new google.maps.Size(32, 32)\r\n                }}\r\n                onClick={() => setSelectedMarker({\r\n                  position: airports.destination.position,\r\n                  title: airports.destination.name,\r\n                  description: `Airport code: ${airports.destination.iata}`\r\n                })}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {selectedMarker && (\r\n            <InfoWindow\r\n              position={selectedMarker.position}\r\n              onCloseClick={() => setSelectedMarker(null)}\r\n            >\r\n              <div>\r\n                <h3 className=\"font-bold text-gray-900\">\r\n                  {selectedMarker.title}\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {selectedMarker.description}\r\n                </p>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </GoogleMap>\r\n\r\n        {/* Controls container */}\r\n        <div className=\"absolute top-4 left-4 bg-white p-4 rounded-lg shadow-md w-72\">\r\n          <div className=\"space-y-3\">\r\n            <div>\r\n              <Autocomplete>\r\n                <input\r\n                  ref={sourceRef}\r\n                  type=\"text\"\r\n                  placeholder=\"Origin\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\r\n                />\r\n              </Autocomplete>\r\n            </div>\r\n            <div>\r\n              <Autocomplete>\r\n                <input\r\n                  ref={destinationRef}\r\n                  type=\"text\"\r\n                  placeholder=\"Destination\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\r\n                />\r\n              </Autocomplete>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2 text-sm\">\r\n              <div className=\"mr-2\">\r\n                <label className=\"flex items-center space-x-1\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"avoidTolls\"\r\n                    checked={routePreferences.avoidTolls}\r\n                    onChange={handlePreferenceChange}\r\n                    className=\"rounded text-teal-500 focus:ring-teal-500\"\r\n                  />\r\n                  <span className=\"flex items-center\">\r\n                    <FaMoneyBillWave className=\"text-teal-500 mr-1\" /> No Tolls\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <label className=\"flex items-center space-x-1\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"avoidHighways\"\r\n                    checked={routePreferences.avoidHighways}\r\n                    onChange={handlePreferenceChange}\r\n                    className=\"rounded text-teal-500 focus:ring-teal-500\"\r\n                  />\r\n                  <span className=\"flex items-center\">\r\n                    <FaTree className=\"text-teal-500 mr-1\" /> Scenic\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Transport Mode Selection */}\r\n            <div className=\"flex justify-between\">\r\n              <button\r\n                onClick={() => handleTransportModeChange(\"driving\")}\r\n                className={`p-2 rounded-full ${\r\n                  transportMode === \"driving\"\r\n                    ? \"bg-teal-500 text-white\"\r\n                    : \"bg-gray-200 text-gray-600\"\r\n                }`}\r\n                title=\"Car\"\r\n              >\r\n                <FaCar />\r\n              </button>\r\n              <button\r\n                onClick={() => handleTransportModeChange(\"flying\")}\r\n                className={`p-2 rounded-full ${\r\n                  transportMode === \"flying\"\r\n                    ? \"bg-teal-500 text-white\"\r\n                    : \"bg-gray-200 text-gray-600\"\r\n                }`}\r\n                title=\"Flight\"\r\n              >\r\n                <FaPlane />\r\n              </button>\r\n              <button\r\n                onClick={() => handleTransportModeChange(\"walking\")}\r\n                className={`p-2 rounded-full ${\r\n                  transportMode === \"walking\"\r\n                    ? \"bg-teal-500 text-white\"\r\n                    : \"bg-gray-200 text-gray-600\"\r\n                }`}\r\n                title=\"Walking\"\r\n              >\r\n                <FaWalking />\r\n              </button>\r\n              <button\r\n                onClick={() => handleTransportModeChange(\"transit\")}\r\n                className={`p-2 rounded-full ${\r\n                  transportMode === \"transit\"\r\n                    ? \"bg-teal-500 text-white\"\r\n                    : \"bg-gray-200 text-gray-600\"\r\n                }`}\r\n                title=\"Train/Transit\"\r\n              >\r\n                <FaTrain />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"flex items-center\">\r\n              <select\r\n                value={algorithm}\r\n                onChange={handleAlgorithmChange}\r\n                className=\"w-full p-2 text-sm border border-gray-300 rounded focus:outline-none focus:border-teal-500\"\r\n              >\r\n                <option value=\"dijkstra\">Dijkstra's Algorithm</option>\r\n                <option value=\"a-star\">A* Algorithm</option>\r\n                <option value=\"bfs\">BFS Algorithm</option>\r\n                <option value=\"dfs\">DFS Algorithm</option>\r\n              </select>\r\n              <button\r\n                onClick={toggleAlgorithmInfo}\r\n                className=\"ml-2 text-gray-500 hover:text-teal-500\"\r\n                title=\"Algorithm Information\"\r\n              >\r\n                <FaInfoCircle />\r\n              </button>\r\n            </div>\r\n\r\n            {showAlgorithmInfo && (\r\n              <div className=\"text-xs p-2 bg-blue-50 rounded text-blue-800\">\r\n                <p>\r\n                  <b>Dijkstra</b>: Explores all directions equally.\r\n                </p>\r\n                <p>\r\n                  <b>A*</b>: Uses heuristics to prioritize promising paths.\r\n                </p>\r\n                <p>\r\n                  <b>BFS</b>: Explores nearest neighbors first.\r\n                </p>\r\n                <p>\r\n                  <b>DFS</b>: Explores as far as possible before backtracking.\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex space-x-2\">\r\n              <button\r\n                onClick={calculateRoute}\r\n                className=\"flex-1 p-2 bg-teal-500 text-white font-medium rounded hover:bg-teal-600 transition-colors flex items-center justify-center\"\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  <span className=\"inline-block animate-spin mr-2\">⟳</span>\r\n                ) : (\r\n                  getTransportIcon(transportMode)\r\n                )}\r\n                <span className=\"ml-1\">Calculate</span>\r\n              </button>\r\n              <button\r\n                onClick={clearRoute}\r\n                className=\"p-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition-colors\"\r\n              >\r\n                <FaTimes />\r\n              </button>\r\n              <button\r\n                onClick={getCurrentLocation}\r\n                className=\"p-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\r\n              >\r\n                <FaLocationArrow />\r\n              </button>\r\n            </div>\r\n\r\n            {distance && duration && (\r\n              <div className=\"text-sm p-2 bg-gray-50 rounded\">\r\n                <div className=\"flex items-center mb-1\">\r\n                  <span className=\"font-medium\">Distance:</span>\r\n                  <span className=\"ml-1\">{distance}</span>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                  <span className=\"font-medium\">Duration:</span>\r\n                  <span className=\"ml-1\">{duration}</span>\r\n                </div>\r\n                {transportMode === \"flying\" && (\r\n                  <div className=\"flex items-center mt-1 text-xs text-gray-600\">\r\n                    <span>Includes airport transfer and 2hr check-in time</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Toast notification */}\r\n        {toast.show && (\r\n          <div\r\n            className={`fixed bottom-4 right-4 p-3 rounded-lg shadow-lg \r\n              ${\r\n                toast.type === \"error\"\r\n                  ? \"bg-red-500 text-white\"\r\n                  : \"bg-green-500 text-white\"\r\n              }`}\r\n          >\r\n            {toast.message}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}