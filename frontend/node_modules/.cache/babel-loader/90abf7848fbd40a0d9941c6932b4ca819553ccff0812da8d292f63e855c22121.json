{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sarthak\\\\VScode workshop\\\\Projects\\\\DSA project\\\\traveler-guide\\\\frontend\\\\src\\\\components\\\\Recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Button, Heading, Flex, VStack, HStack, IconButton, Input, Select, Text, Badge, SimpleGrid, Card, CardHeader, CardBody, CardFooter, Divider, Image, useToast } from \"@chakra-ui/react\";\nimport { FaSearch, FaHotel, FaUtensils, FaGasPump, FaStar } from \"react-icons/fa\";\nimport { recommendationsService } from \"../services/api\";\n\n// Placeholder images for different place types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst placeholderImages = {\n  hotel: \"https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n  restaurant: \"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n  gas_station: \"https://images.unsplash.com/photo-1565021291946-5a3f7259886b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n  attraction: \"https://images.unsplash.com/photo-1504197885-609741792ce7?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\n  rest_area: \"https://images.unsplash.com/photo-1552679943-4c4359011d91?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n};\nconst Recommendations = ({\n  userLocation,\n  route\n}) => {\n  _s();\n  // State\n  const [placeType, setPlaceType] = useState(\"all\");\n  const [radius, setRadius] = useState(5000);\n  const [maxPrice, setMaxPrice] = useState(4);\n  const [minRating, setMinRating] = useState(0);\n  const [cuisine, setCuisine] = useState(\"\");\n  const [places, setPlaces] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Toast for notifications\n  const toast = useToast();\n\n  // Get recommendations based on location and filters\n  const getRecommendations = async () => {\n    if (!(userLocation !== null && userLocation !== void 0 && userLocation.lat) || !(userLocation !== null && userLocation !== void 0 && userLocation.lng)) {\n      toast({\n        title: \"Location needed\",\n        description: \"Please calculate a route first to get your location\",\n        status: \"warning\",\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    setIsLoading(true);\n    try {\n      let response;\n\n      // Call different endpoints based on place type\n      switch (placeType) {\n        case \"hotel\":\n          response = await recommendationsService.getHotelRecommendations(userLocation.lat, userLocation.lng, radius, maxPrice);\n          setPlaces(response.data.hotels || []);\n          break;\n        case \"restaurant\":\n          response = await recommendationsService.getRestaurantRecommendations(userLocation.lat, userLocation.lng, radius, cuisine || undefined);\n          setPlaces(response.data.restaurants || []);\n          break;\n        case \"gas_station\":\n          if (route) {\n            response = await recommendationsService.getGasStationRecommendations(route, 2000 // max detour in meters\n            );\n            setPlaces(response.data.gasStations || []);\n          } else {\n            response = await recommendationsService.getPlaceRecommendations(userLocation.lat, userLocation.lng, radius, \"gas_station\");\n            setPlaces(response.data.places || []);\n          }\n          break;\n        default:\n          // Get all places\n          response = await recommendationsService.getPlaceRecommendations(userLocation.lat, userLocation.lng, radius, placeType !== \"all\" ? placeType : undefined);\n          setPlaces(response.data.places || []);\n      }\n\n      // Filter places by rating if needed\n      if (minRating > 0) {\n        setPlaces(prev => prev.filter(place => place.rating >= minRating));\n      }\n\n      // Success message\n      toast({\n        title: \"Recommendations loaded\",\n        description: `Found ${places.length} places matching your criteria`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error(\"Error getting recommendations:\", error);\n      toast({\n        title: \"Error getting recommendations\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Render stars for rating\n  const renderStars = rating => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(/*#__PURE__*/_jsxDEV(Box, {\n        as: \"span\",\n        color: i <= rating ? \"yellow.400\" : \"gray.300\",\n        children: /*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this));\n    }\n    return stars;\n  };\n\n  // Show price level as dollar signs\n  const renderPrice = priceLevel => {\n    return \"$\".repeat(priceLevel || 1);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      mb: 4,\n      children: \"Place Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: placeType,\n          onChange: e => setPlaceType(e.target.value),\n          w: \"200px\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hotel\",\n            children: \"Hotels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"restaurant\",\n            children: \"Restaurants\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gas_station\",\n            children: \"Gas Stations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"attraction\",\n            children: \"Attractions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rest_area\",\n            children: \"Rest Areas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: radius,\n          onChange: e => setRadius(parseInt(e.target.value)),\n          w: \"150px\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1000\",\n            children: \"1 km\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2000\",\n            children: \"2 km\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5000\",\n            children: \"5 km\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"10000\",\n            children: \"10 km\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"20000\",\n            children: \"20 km\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), placeType === \"hotel\" && /*#__PURE__*/_jsxDEV(Select, {\n          value: maxPrice,\n          onChange: e => setMaxPrice(parseInt(e.target.value)),\n          w: \"120px\",\n          placeholder: \"Max Price\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"$$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"$$$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"$$$$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), placeType === \"restaurant\" && /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Cuisine (e.g., Italian)\",\n          value: cuisine,\n          onChange: e => setCuisine(e.target.value),\n          w: \"200px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: minRating,\n          onChange: e => setMinRating(parseFloat(e.target.value)),\n          w: \"150px\",\n          placeholder: \"Min Rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Any rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"3+ stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"4+ stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4.5\",\n            children: \"4.5+ stars\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          leftIcon: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 23\n          }, this),\n          onClick: getRecommendations,\n          isLoading: isLoading,\n          children: \"Find Places\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), places.length > 0 ? /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: {\n          base: 1,\n          md: 2,\n          lg: 3\n        },\n        spacing: 4,\n        mt: 4,\n        children: places.map(place => {\n          var _place$photos, _place$type;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              pb: 0,\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                children: place.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                mt: 1,\n                children: [renderStars(place.rating), /*#__PURE__*/_jsxDEV(Text, {\n                  ml: 1,\n                  color: \"gray.600\",\n                  children: [\"(\", place.rating || \"No rating\", \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              py: 2,\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: ((_place$photos = place.photos) === null || _place$photos === void 0 ? void 0 : _place$photos[0]) || placeholderImages[place.type] || placeholderImages.hotel,\n                alt: place.name,\n                borderRadius: \"md\",\n                h: \"120px\",\n                w: \"100%\",\n                objectFit: \"cover\",\n                mb: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                noOfLines: 2,\n                children: place.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                mt: 2,\n                wrap: \"wrap\",\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  colorScheme: place.type === \"hotel\" ? \"blue\" : place.type === \"restaurant\" ? \"orange\" : place.type === \"gas_station\" ? \"green\" : place.type === \"attraction\" ? \"purple\" : \"gray\",\n                  children: (_place$type = place.type) === null || _place$type === void 0 ? void 0 : _place$type.replace(\"_\", \" \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this), place.priceLevel && /*#__PURE__*/_jsxDEV(Badge, {\n                  colorScheme: \"green\",\n                  children: renderPrice(place.priceLevel)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), place.cuisine && /*#__PURE__*/_jsxDEV(Badge, {\n                  colorScheme: \"yellow\",\n                  children: place.cuisine\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this), place.distance && /*#__PURE__*/_jsxDEV(Badge, {\n                  colorScheme: \"gray\",\n                  children: [(place.distance / 1000).toFixed(1), \" km\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              pt: 2,\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                spacing: 2,\n                children: [place.type === \"hotel\" && /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  leftIcon: /*#__PURE__*/_jsxDEV(FaHotel, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 35\n                  }, this),\n                  colorScheme: \"blue\",\n                  variant: \"outline\",\n                  children: \"Book\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this), place.type === \"restaurant\" && /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  leftIcon: /*#__PURE__*/_jsxDEV(FaUtensils, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 35\n                  }, this),\n                  colorScheme: \"orange\",\n                  variant: \"outline\",\n                  children: \"Menu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 23\n                }, this), place.type === \"gas_station\" && /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  leftIcon: /*#__PURE__*/_jsxDEV(FaGasPump, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 35\n                  }, this),\n                  colorScheme: \"green\",\n                  variant: \"outline\",\n                  children: \"Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  colorScheme: \"teal\",\n                  variant: \"solid\",\n                  children: \"Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, place._id || place.place_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        py: 10,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          color: \"gray.500\",\n          children: isLoading ? \"Loading recommendations...\" : \"No places found. Try searching with different criteria or calculating a route first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"psktMHrKzbY/ZKMS6s5trIpYUB0=\", false, function () {\n  return [useToast];\n});\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","Box","Button","Heading","Flex","VStack","HStack","IconButton","Input","Select","Text","Badge","SimpleGrid","Card","CardHeader","CardBody","CardFooter","Divider","Image","useToast","FaSearch","FaHotel","FaUtensils","FaGasPump","FaStar","recommendationsService","jsxDEV","_jsxDEV","placeholderImages","hotel","restaurant","gas_station","attraction","rest_area","Recommendations","userLocation","route","_s","placeType","setPlaceType","radius","setRadius","maxPrice","setMaxPrice","minRating","setMinRating","cuisine","setCuisine","places","setPlaces","isLoading","setIsLoading","toast","getRecommendations","lat","lng","title","description","status","duration","isClosable","response","getHotelRecommendations","data","hotels","getRestaurantRecommendations","undefined","restaurants","getGasStationRecommendations","gasStations","getPlaceRecommendations","prev","filter","place","rating","length","error","console","message","renderStars","stars","i","push","as","color","children","fileName","_jsxFileName","lineNumber","columnNumber","renderPrice","priceLevel","repeat","p","size","mb","spacing","align","value","onChange","e","target","w","parseInt","placeholder","parseFloat","colorScheme","leftIcon","onClick","columns","base","md","lg","mt","map","_place$photos","_place$type","pb","name","ml","py","src","photos","type","alt","borderRadius","h","objectFit","noOfLines","address","wrap","replace","distance","toFixed","pt","variant","_id","place_id","textAlign","_c","$RefreshReg$"],"sources":["D:/Sarthak/VScode workshop/Projects/DSA project/traveler-guide/frontend/src/components/Recommendations.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  VStack,\r\n  HStack,\r\n  IconButton,\r\n  Input,\r\n  Select,\r\n  Text,\r\n  Badge,\r\n  SimpleGrid,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Divider,\r\n  Image,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  FaSearch,\r\n  FaHotel,\r\n  FaUtensils,\r\n  FaGasPump,\r\n  FaStar,\r\n} from \"react-icons/fa\";\r\n\r\nimport { recommendationsService } from \"../services/api\";\r\n\r\n// Placeholder images for different place types\r\nconst placeholderImages = {\r\n  hotel:\r\n    \"https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\r\n  restaurant:\r\n    \"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\r\n  gas_station:\r\n    \"https://images.unsplash.com/photo-1565021291946-5a3f7259886b?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\r\n  attraction:\r\n    \"https://images.unsplash.com/photo-1504197885-609741792ce7?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\r\n  rest_area:\r\n    \"https://images.unsplash.com/photo-1552679943-4c4359011d91?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\",\r\n};\r\n\r\nconst Recommendations = ({ userLocation, route }) => {\r\n  // State\r\n  const [placeType, setPlaceType] = useState(\"all\");\r\n  const [radius, setRadius] = useState(5000);\r\n  const [maxPrice, setMaxPrice] = useState(4);\r\n  const [minRating, setMinRating] = useState(0);\r\n  const [cuisine, setCuisine] = useState(\"\");\r\n  const [places, setPlaces] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Toast for notifications\r\n  const toast = useToast();\r\n\r\n  // Get recommendations based on location and filters\r\n  const getRecommendations = async () => {\r\n    if (!userLocation?.lat || !userLocation?.lng) {\r\n      toast({\r\n        title: \"Location needed\",\r\n        description: \"Please calculate a route first to get your location\",\r\n        status: \"warning\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      let response;\r\n\r\n      // Call different endpoints based on place type\r\n      switch (placeType) {\r\n        case \"hotel\":\r\n          response = await recommendationsService.getHotelRecommendations(\r\n            userLocation.lat,\r\n            userLocation.lng,\r\n            radius,\r\n            maxPrice\r\n          );\r\n          setPlaces(response.data.hotels || []);\r\n          break;\r\n\r\n        case \"restaurant\":\r\n          response = await recommendationsService.getRestaurantRecommendations(\r\n            userLocation.lat,\r\n            userLocation.lng,\r\n            radius,\r\n            cuisine || undefined\r\n          );\r\n          setPlaces(response.data.restaurants || []);\r\n          break;\r\n\r\n        case \"gas_station\":\r\n          if (route) {\r\n            response =\r\n              await recommendationsService.getGasStationRecommendations(\r\n                route,\r\n                2000 // max detour in meters\r\n              );\r\n            setPlaces(response.data.gasStations || []);\r\n          } else {\r\n            response = await recommendationsService.getPlaceRecommendations(\r\n              userLocation.lat,\r\n              userLocation.lng,\r\n              radius,\r\n              \"gas_station\"\r\n            );\r\n            setPlaces(response.data.places || []);\r\n          }\r\n          break;\r\n\r\n        default:\r\n          // Get all places\r\n          response = await recommendationsService.getPlaceRecommendations(\r\n            userLocation.lat,\r\n            userLocation.lng,\r\n            radius,\r\n            placeType !== \"all\" ? placeType : undefined\r\n          );\r\n          setPlaces(response.data.places || []);\r\n      }\r\n\r\n      // Filter places by rating if needed\r\n      if (minRating > 0) {\r\n        setPlaces((prev) => prev.filter((place) => place.rating >= minRating));\r\n      }\r\n\r\n      // Success message\r\n      toast({\r\n        title: \"Recommendations loaded\",\r\n        description: `Found ${places.length} places matching your criteria`,\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error getting recommendations:\", error);\r\n      toast({\r\n        title: \"Error getting recommendations\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Render stars for rating\r\n  const renderStars = (rating) => {\r\n    const stars = [];\r\n    for (let i = 1; i <= 5; i++) {\r\n      stars.push(\r\n        <Box as=\"span\" color={i <= rating ? \"yellow.400\" : \"gray.300\"} key={i}>\r\n          <FaStar />\r\n        </Box>\r\n      );\r\n    }\r\n    return stars;\r\n  };\r\n\r\n  // Show price level as dollar signs\r\n  const renderPrice = (priceLevel) => {\r\n    return \"$\".repeat(priceLevel || 1);\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <Heading size=\"lg\" mb={4}>\r\n        Place Recommendations\r\n      </Heading>\r\n\r\n      <VStack spacing={4} align=\"stretch\">\r\n        <HStack spacing={2}>\r\n          <Select\r\n            value={placeType}\r\n            onChange={(e) => setPlaceType(e.target.value)}\r\n            w=\"200px\"\r\n          >\r\n            <option value=\"all\">All Places</option>\r\n            <option value=\"hotel\">Hotels</option>\r\n            <option value=\"restaurant\">Restaurants</option>\r\n            <option value=\"gas_station\">Gas Stations</option>\r\n            <option value=\"attraction\">Attractions</option>\r\n            <option value=\"rest_area\">Rest Areas</option>\r\n          </Select>\r\n\r\n          <Select\r\n            value={radius}\r\n            onChange={(e) => setRadius(parseInt(e.target.value))}\r\n            w=\"150px\"\r\n          >\r\n            <option value=\"1000\">1 km</option>\r\n            <option value=\"2000\">2 km</option>\r\n            <option value=\"5000\">5 km</option>\r\n            <option value=\"10000\">10 km</option>\r\n            <option value=\"20000\">20 km</option>\r\n          </Select>\r\n\r\n          {placeType === \"hotel\" && (\r\n            <Select\r\n              value={maxPrice}\r\n              onChange={(e) => setMaxPrice(parseInt(e.target.value))}\r\n              w=\"120px\"\r\n              placeholder=\"Max Price\"\r\n            >\r\n              <option value=\"1\">$</option>\r\n              <option value=\"2\">$$</option>\r\n              <option value=\"3\">$$$</option>\r\n              <option value=\"4\">$$$$</option>\r\n            </Select>\r\n          )}\r\n\r\n          {placeType === \"restaurant\" && (\r\n            <Input\r\n              placeholder=\"Cuisine (e.g., Italian)\"\r\n              value={cuisine}\r\n              onChange={(e) => setCuisine(e.target.value)}\r\n              w=\"200px\"\r\n            />\r\n          )}\r\n\r\n          <Select\r\n            value={minRating}\r\n            onChange={(e) => setMinRating(parseFloat(e.target.value))}\r\n            w=\"150px\"\r\n            placeholder=\"Min Rating\"\r\n          >\r\n            <option value=\"0\">Any rating</option>\r\n            <option value=\"3\">3+ stars</option>\r\n            <option value=\"4\">4+ stars</option>\r\n            <option value=\"4.5\">4.5+ stars</option>\r\n          </Select>\r\n\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            leftIcon={<FaSearch />}\r\n            onClick={getRecommendations}\r\n            isLoading={isLoading}\r\n          >\r\n            Find Places\r\n          </Button>\r\n        </HStack>\r\n\r\n        {places.length > 0 ? (\r\n          <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={4} mt={4}>\r\n            {places.map((place) => (\r\n              <Card key={place._id || place.place_id}>\r\n                <CardHeader pb={0}>\r\n                  <Heading size=\"md\">{place.name}</Heading>\r\n                  <HStack mt={1}>\r\n                    {renderStars(place.rating)}\r\n                    <Text ml={1} color=\"gray.600\">\r\n                      ({place.rating || \"No rating\"})\r\n                    </Text>\r\n                  </HStack>\r\n                </CardHeader>\r\n\r\n                <CardBody py={2}>\r\n                  <Image\r\n                    src={\r\n                      place.photos?.[0] ||\r\n                      placeholderImages[place.type] ||\r\n                      placeholderImages.hotel\r\n                    }\r\n                    alt={place.name}\r\n                    borderRadius=\"md\"\r\n                    h=\"120px\"\r\n                    w=\"100%\"\r\n                    objectFit=\"cover\"\r\n                    mb={2}\r\n                  />\r\n\r\n                  <Text noOfLines={2}>{place.address}</Text>\r\n\r\n                  <HStack mt={2} wrap=\"wrap\">\r\n                    <Badge\r\n                      colorScheme={\r\n                        place.type === \"hotel\"\r\n                          ? \"blue\"\r\n                          : place.type === \"restaurant\"\r\n                          ? \"orange\"\r\n                          : place.type === \"gas_station\"\r\n                          ? \"green\"\r\n                          : place.type === \"attraction\"\r\n                          ? \"purple\"\r\n                          : \"gray\"\r\n                      }\r\n                    >\r\n                      {place.type?.replace(\"_\", \" \")}\r\n                    </Badge>\r\n\r\n                    {place.priceLevel && (\r\n                      <Badge colorScheme=\"green\">\r\n                        {renderPrice(place.priceLevel)}\r\n                      </Badge>\r\n                    )}\r\n\r\n                    {place.cuisine && (\r\n                      <Badge colorScheme=\"yellow\">{place.cuisine}</Badge>\r\n                    )}\r\n\r\n                    {place.distance && (\r\n                      <Badge colorScheme=\"gray\">\r\n                        {(place.distance / 1000).toFixed(1)} km\r\n                      </Badge>\r\n                    )}\r\n                  </HStack>\r\n                </CardBody>\r\n\r\n                <Divider />\r\n\r\n                <CardFooter pt={2}>\r\n                  <HStack spacing={2}>\r\n                    {place.type === \"hotel\" && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        leftIcon={<FaHotel />}\r\n                        colorScheme=\"blue\"\r\n                        variant=\"outline\"\r\n                      >\r\n                        Book\r\n                      </Button>\r\n                    )}\r\n\r\n                    {place.type === \"restaurant\" && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        leftIcon={<FaUtensils />}\r\n                        colorScheme=\"orange\"\r\n                        variant=\"outline\"\r\n                      >\r\n                        Menu\r\n                      </Button>\r\n                    )}\r\n\r\n                    {place.type === \"gas_station\" && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        leftIcon={<FaGasPump />}\r\n                        colorScheme=\"green\"\r\n                        variant=\"outline\"\r\n                      >\r\n                        Info\r\n                      </Button>\r\n                    )}\r\n\r\n                    <Button size=\"sm\" colorScheme=\"teal\" variant=\"solid\">\r\n                      Directions\r\n                    </Button>\r\n                  </HStack>\r\n                </CardFooter>\r\n              </Card>\r\n            ))}\r\n          </SimpleGrid>\r\n        ) : (\r\n          <Box textAlign=\"center\" py={10}>\r\n            <Text color=\"gray.500\">\r\n              {isLoading\r\n                ? \"Loading recommendations...\"\r\n                : \"No places found. Try searching with different criteria or calculating a route first.\"}\r\n            </Text>\r\n          </Box>\r\n        )}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}